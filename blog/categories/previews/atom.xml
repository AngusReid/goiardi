<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Previews | Goiardi]]></title>
  <link href="http://ctdk.github.io/goiardi/blog/categories/previews/atom.xml" rel="self"/>
  <link href="http://ctdk.github.io/goiardi/"/>
  <updated>2014-09-24T22:43:19-07:00</updated>
  <id>http://ctdk.github.io/goiardi/</id>
  <author>
    <name><![CDATA[Jeremy Bingham]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Another Shovey Preview: The Shovey-Jobs Cookbook]]></title>
    <link href="http://ctdk.github.io/goiardi/blog/2014/09/05/another-shovey-preview-the-shovey-jobs-cookbook/"/>
    <updated>2014-09-05T19:58:15-07:00</updated>
    <id>http://ctdk.github.io/goiardi/blog/2014/09/05/another-shovey-preview-the-shovey-jobs-cookbook</id>
    <content type="html"><![CDATA[<p>Shovey still isn&rsquo;t finished, but it&rsquo;s come a long ways. To make it easier to play with and find potential issues, I&rsquo;ve released a <a href="https://github.com/ctdk/shovey-jobs">shovey-jobs cookbook</a> to install and configure shovey on a node.</p>

<p>It&rsquo;s a preliminary cookbook, but since shovey&rsquo;s pretty preliminary still I&rsquo;m OK with that. To use the shovey-jobs cookbook, you&rsquo;ll need to set goiardi and the knife-shove plugin up as explained in <a href="http://ctdk.github.io/goiardi/blog/2014/08/24/a-preview-of-shovey/">this previous post on shovey</a> first. Goiardi still only works with shovey in in-memory mode; the SQL support for shovey hasn&rsquo;t been finished yet. After goiardi and serf on the goiardi server are set up, spin up a node and run the shovey-jobs cookbook on it, following the instructions in the <a href="https://github.com/ctdk/shovey-jobs/blob/master/README.md">shovey-jobs README</a>. This cookbook has only been tested on Debian, but it may work with Ubuntu as well. At the moment it&rsquo;s unlikely to work with RHEL and its derivatives or other operating systems, mostly because the init script is Debian specific.</p>

<p>This cookbook depends on having the serf and golang cookbooks uploaded and in the node&rsquo;s run list. Serf may need some extra configuration to work correctly; I had to add this to the test node&rsquo;s attributes for it to work right.</p>

<p>```
&ldquo;serf&rdquo; => {</p>

<pre><code>"agent" =&gt; { 
  "node_name" =&gt; "goiardi-test.local",
  "start_join" =&gt; [ "10.250.55.108" ],
  "advertise" =&gt; "10.34.10.15"
}
</code></pre>

<p>  }
```</p>

<p>The main serf points are that the serf node&rsquo;s name needs to be the same as the chef client name on the node, it needs to join the same serf cluster as goiardi&rsquo;s serf agent is running on, and it needs to advertise the correct address. The last one came up in testing for me because goiardi was running on my dev box, while the shovey node&rsquo;s serf was advertising the internal vagrant address rather than the shared network address. That should be enough to get you going running commands with shovey. See the <a href="https://github.com/ctdk/knife-shove/blob/master/README.rdoc">knife-shove docs</a> for possible commands there.</p>

<p>On another note, there&rsquo;s some documentation now for the <a href="https://github.com/ctdk/goiardi/blob/serfing/shovey_api.md">shovey API</a>. The new thing there is how the shovey client now streams job output back to the server, and the server can in turn stream it to a client. Unfortunately the knife-shove plugin does not yet allow you to watch the job output stream by, but it&rsquo;s on the list of things to do before the formal release.</p>
]]></content>
  </entry>
  
</feed>

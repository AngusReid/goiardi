<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Shovey | Goiardi]]></title>
  <link href="http://ctdk.github.io/goiardi/blog/categories/shovey/atom.xml" rel="self"/>
  <link href="http://ctdk.github.io/goiardi/"/>
  <updated>2014-09-30T13:59:03-07:00</updated>
  <id>http://ctdk.github.io/goiardi/</id>
  <author>
    <name><![CDATA[Jeremy Bingham]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Goiardi Version 0.8.0 (Plus Shovey) - Hojotoho! Hojotoho!]]></title>
    <link href="http://ctdk.github.io/goiardi/blog/2014/09/29/goiardi-version-0-dot-8-0-plus-shovey-hojotoho-hojotoho/"/>
    <updated>2014-09-29T23:25:23-07:00</updated>
    <id>http://ctdk.github.io/goiardi/blog/2014/09/29/goiardi-version-0-dot-8-0-plus-shovey-hojotoho-hojotoho</id>
    <content type="html"><![CDATA[<p>In honor of the upcoming <a href="https://www.getchef.com/summit/">Chef Summit</a>, there are new releases from goiardi and friends. This officially brings out <a href="https://github.com/ctdk/goiardi#shovey">shovey</a>, the goiardi push jobs facility, to the world.</p>

<p>Because of the relative complexity of shovey, there are actually three releases here:</p>

<ul>
<li><a href="https://github.com/ctdk/goiardi/releases/tag/v0.8.0">goiardi v0.8.0 &ndash; Hojotoho! Hojotoho!</a></li>
<li><a href="https://github.com/ctdk/schob/releases/tag/v0.1.0">schob v0.1.0 &ndash; Heiaha! Heiaha!</a></li>
<li><a href="https://github.com/ctdk/knife-shove/releases/tag/v0.6.0">knife-shove v0.6.0 &ndash; Helmwige! Hier!</a></li>
</ul>


<p>Astute readers may recognize the releases' codenames as the opening lines of <a href="https://www.youtube.com/watch?v=cg0rmuoqo7U">Act III of <i>Die Walk√ºre</i></a>.</p>

<p>Shovey&rsquo;s included with goiardi. Schob is the shovey client that gets installed on the nodes that will run jobs, and knife-shove is a knife plugin forked from knife-push to manage shovey jobs. The <a href="https://github.com/ctdk/goiardi/blob/master/README.md#shovey">goiardi shovey docs</a>, the <a href="https://github.com/ctdk/schob/blob/master/README.md">schob README</a>, and the <a href="https://github.com/ctdk/knife-shove/blob/master/README.rdoc">knife-shove README</a> have a bunch of documentation on how to use shovey.</p>

<p>Nice, functional cookbooks for shovey and goiardi are also coming. There is a <a href="https://github.com/ctdk/shovey-jobs">shovey-jobs</a> cookbook already, but it only supports Debian. Other platforms are being added, and will be ready soon.</p>

<p>Also coming reasonably soon are organizations and RBAC (it&rsquo;s finally time), and revamping the documentation. The README has gotten too long and unweildy. It will be split apart, reorganized, and expanded where needed, while the godocs for goiardi will stop being a mirror of the README and focus more on development and internals.</p>

<p>See you at the Summit!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goiardi + Shovey in Final Prerelease Stage]]></title>
    <link href="http://ctdk.github.io/goiardi/blog/2014/09/24/goiardi-plus-shovey-in-final-prerelease-stage/"/>
    <updated>2014-09-24T21:38:01-07:00</updated>
    <id>http://ctdk.github.io/goiardi/blog/2014/09/24/goiardi-plus-shovey-in-final-prerelease-stage</id>
    <content type="html"><![CDATA[<p>Goiardi 0.8.0 is in the final stages of release engineering before its official release. This, of course, is the release that introduces shovey, the goiardi facility for running jobs on client nodes without having to do a full chef-client run.</p>

<p><a href="https://github.com/ctdk/goiardi/releases/tag/v0.8.0-pre3">0.8.0-pre3</a> should be the last prerelease version of goiardi 0.8.0. It goes hand in hand with <a href="https://github.com/ctdk/schob/releases/tag/v0.1.0-pre2">schob 0.1.0pre2</a>, now with updated documentation, and <a href="https://github.com/ctdk/knife-shove/releases/tag/v0.6.0-pre1">knife-shove 0.6.0-pre1</a>. The <a href="https://github.com/ctdk/shovey-jobs/releases/tag/v0.0.3">shovey-jobs</a> cookbook for setting up shovey on a node is important too, although it currently only works on Debian systems.</p>

<p>Documentation for all the pieces of shovey are available. The <a href="https://github.com/ctdk/goiardi/tree/serfing#shovey">shovey docs in goiardi</a> give an overview, and there&rsquo;s some <a href="https://github.com/ctdk/goiardi/blob/serfing/shovey_api.md">shovey API documentation</a> as well. There&rsquo;s <a href="https://github.com/ctdk/knife-shove/blob/tests/README.rdoc">knife-shove documentation</a> and <a href="https://github.com/ctdk/schob/blob/master/README.md">schob (the shovey client) documentation</a> available in their respective repositories as well.</p>

<p>Barring any complications, a formal release should be coming in the next couple of days.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Another Shovey Preview: The Shovey-Jobs Cookbook]]></title>
    <link href="http://ctdk.github.io/goiardi/blog/2014/09/05/another-shovey-preview-the-shovey-jobs-cookbook/"/>
    <updated>2014-09-05T19:58:15-07:00</updated>
    <id>http://ctdk.github.io/goiardi/blog/2014/09/05/another-shovey-preview-the-shovey-jobs-cookbook</id>
    <content type="html"><![CDATA[<p>Shovey still isn&rsquo;t finished, but it&rsquo;s come a long ways. To make it easier to play with and find potential issues, I&rsquo;ve released a <a href="https://github.com/ctdk/shovey-jobs">shovey-jobs cookbook</a> to install and configure shovey on a node.</p>

<p>It&rsquo;s a preliminary cookbook, but since shovey&rsquo;s pretty preliminary still I&rsquo;m OK with that. To use the shovey-jobs cookbook, you&rsquo;ll need to set goiardi and the knife-shove plugin up as explained in <a href="http://ctdk.github.io/goiardi/blog/2014/08/24/a-preview-of-shovey/">this previous post on shovey</a> first. Goiardi still only works with shovey in in-memory mode; the SQL support for shovey hasn&rsquo;t been finished yet. After goiardi and serf on the goiardi server are set up, spin up a node and run the shovey-jobs cookbook on it, following the instructions in the <a href="https://github.com/ctdk/shovey-jobs/blob/master/README.md">shovey-jobs README</a>. This cookbook has only been tested on Debian, but it may work with Ubuntu as well. At the moment it&rsquo;s unlikely to work with RHEL and its derivatives or other operating systems, mostly because the init script is Debian specific.</p>

<p>This cookbook depends on having the serf and golang cookbooks uploaded and in the node&rsquo;s run list. Serf may need some extra configuration to work correctly; I had to add this to the test node&rsquo;s attributes for it to work right.</p>

<p>```
&ldquo;serf&rdquo; => {</p>

<pre><code>"agent" =&gt; { 
  "node_name" =&gt; "goiardi-test.local",
  "start_join" =&gt; [ "10.250.55.108" ],
  "advertise" =&gt; "10.34.10.15"
}
</code></pre>

<p>  }
```</p>

<p>The main serf points are that the serf node&rsquo;s name needs to be the same as the chef client name on the node, it needs to join the same serf cluster as goiardi&rsquo;s serf agent is running on, and it needs to advertise the correct address. The last one came up in testing for me because goiardi was running on my dev box, while the shovey node&rsquo;s serf was advertising the internal vagrant address rather than the shared network address. That should be enough to get you going running commands with shovey. See the <a href="https://github.com/ctdk/knife-shove/blob/master/README.rdoc">knife-shove docs</a> for possible commands there.</p>

<p>On another note, there&rsquo;s some documentation now for the <a href="https://github.com/ctdk/goiardi/blob/serfing/shovey_api.md">shovey API</a>. The new thing there is how the shovey client now streams job output back to the server, and the server can in turn stream it to a client. Unfortunately the knife-shove plugin does not yet allow you to watch the job output stream by, but it&rsquo;s on the list of things to do before the formal release.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Preview of Shovey]]></title>
    <link href="http://ctdk.github.io/goiardi/blog/2014/08/24/a-preview-of-shovey/"/>
    <updated>2014-08-24T22:07:42-07:00</updated>
    <id>http://ctdk.github.io/goiardi/blog/2014/08/24/a-preview-of-shovey</id>
    <content type="html"><![CDATA[<p>The long promised &ldquo;shovey&rdquo; jobs for goiardi, a serf-based way to push commands out to nodes, is finally ready for a preview. There&rsquo;s still some loose ends to pull together, like saving job status on the client so if it&rsquo;s interrupted it can report that fact back to the server and making the goiardi end work with MySQL and Postgres, but it&rsquo;s ready to play with.</p>

<p>To try playing with it, you&rsquo;ll need <a href="https://github.com/ctdk/schob">schob</a>, the shovey client, and <a href="https://github.com/ctdk/knife-shove">knife-shove</a>, the knife plugin to manage shovey jobs.</p>

<p>As explained in the schob README:</p>

<blockquote><ol>
<li>Checkout the &ldquo;serfing&rdquo; branch from goiardi</li>
<li>Create an RSA keypair for signing shovey requests</li>
<li>Install serf and run it as &ldquo;serf agent&rdquo;</li>
<li>Run goiardi in in-memory mode (at this writing, MySQL and Postgres in goiardi don&rsquo;t support shovey yet) with these extra options: <code>--use-serf --use-shovey --sign-priv-key=/path/to/private.key --sign-pub-key=/path/to/public.key</code></li>
<li>Install knife-shove from <a href="https://github.com/ctdk/knife-shove">https://github.com/ctdk/knife-shove</a></li>
<li>Set up the node in goiardi you want to test shovey on. I&rsquo;ve been using the computer I do my usual goiardi dev work for most of it.</li>
<li>Install schob the usual go way</li>
<li>Note where the testing whitelist file is (probably somewhere like ~/go/src/github.com/ctdk/schob/test/whitelist.json).</li>
<li>Run schob like so: <code>schob -VVVV -e http://chef-server.local:4545 -n node-name.local -k /path/to/node.key -w /path/to/schob/test/whitelist.json -p /path/to/public.key --serf-addr=127.0.0.1:7373</code></li>
</ol>


<p>Run schob with <code>-h</code> to see all current options.</p></blockquote>

<p>Cookbooks for setting this all up and better documentation are coming, including documenting the HTTP and serf APIs for communicating with the server and client. The HTTP API is broadly similar to the Chef Pushy API, but not identical. Everything about shovey is still subject to change until it&rsquo;s officially released, but it&rsquo;s ready to play with now. Suggestions and comments are, of course, welcome.</p>
]]></content>
  </entry>
  
</feed>

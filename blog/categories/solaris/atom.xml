<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Solaris | Goiardi]]></title>
  <link href="http://ctdk.github.io/goiardi/blog/categories/solaris/atom.xml" rel="self"/>
  <link href="http://ctdk.github.io/goiardi/"/>
  <updated>2014-07-29T22:45:04-07:00</updated>
  <id>http://ctdk.github.io/goiardi/</id>
  <author>
    <name><![CDATA[Jeremy Bingham]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Goiardi on Solaris/illumos/etc.]]></title>
    <link href="http://ctdk.github.io/goiardi/blog/2014/06/19/building-goiardi-on-solaris-slash-illumos-slash-etc/"/>
    <updated>2014-06-19T21:19:08-07:00</updated>
    <id>http://ctdk.github.io/goiardi/blog/2014/06/19/building-goiardi-on-solaris-slash-illumos-slash-etc</id>
    <content type="html"><![CDATA[<p>With the recent release of <a href="http://golang.org/doc/go1.3">Go 1.3</a>, Go now has <a href="http://golang.org/doc/go1.3#solaris">experimental support for Solaris and its various derivatives</a>. This means that goiardi will build and run on Solaris, although in an experimental way.</p>

<p>Unfortunately to get Go on Solaris/illumos/etc. you have to build it yourself from source, and at least when I was trying it out with OmniOS in vagrant it did not come with gcc by default. Getting go up so you can try out goiardi (if you don&rsquo;t want to <a href="https://github.com/ctdk/goiardi/releases/tag/v0.5.2">get the binary</a> is pretty straightforward.</p>

<ul>
<li>First, install gcc. <a href="http://omnios.omniti.com/wiki.php/DevEnv">These instructions</a> set you through installing gcc. It wasn&rsquo;t clear to me at first, but you do have to run all the <code>pkg install</code> commands mentioned. First install the appropriate version of gcc, then install those other packages.</li>
</ul>


<p>Once that&rsquo;s done, make sure your PATH is set per the instructions on that page.</p>

<ul>
<li><p>Install git with <code>pkg install developer/versioning/git</code></p></li>
<li><p>Next, download go 1.3: <code>wget http://golang.org/dl/go1.3.src.tar.gz</code> and extract it somewhere. This will be your GOROOT. Set the environment variable with <code>export GOROOT=&lt;go's location&gt;</code> (assuming you&rsquo;re using bash or similar).</p></li>
</ul>


<p>The next steps come from <a href="http://golang.org/doc/install/source">*Installing Go from source</a>:</p>

<ul>
<li><p>In this new GOROOT, <code>cd src/</code>, then run <code>./all.bash</code>. It will build go for you. If it complains about being unable to find unistd.h, you were like me and forgot the second step on that <em>Installing GCC</em> page.</p></li>
<li><p>You want to actually be able to use go, so add it to your path: <code>export PATH=$PATH:$GOROOT/bin</code>.</p></li>
<li><p>Now you need a workspace. In your home directory, run:</p></li>
</ul>


<p><code>
mkdir gocode
mkdir gocode/src
mkdir gocode/bin
mkdir gocode/pkg
export GOPATH=$HOME/gocode
export PATH=$PATH:$GOPATH/bin
</code></p>

<ul>
<li>Almost there. All that&rsquo;s left is running</li>
</ul>


<p><code>
go get -t github.com/ctdk/goiardi
go install github.com/ctdk/goiardi
</code></p>

<p>Assuming all went well, you can run <code>goiardi</code> at your prompt with whatever options you want, and it will happily run. After this point using goiardi is like using it on any other platform.</p>
]]></content>
  </entry>
  
</feed>
